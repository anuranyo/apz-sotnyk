
Міністерство освіти і науки України Харківський національний університет радіоелектроніки
Кафедра програмної інженерії











Лабораторна робота
з дисципліни: «Архітектура програмного забезпечення»
на тему: «Розробка опису проєкту в форматі «Vision and Scope»






Виконала:
ст. гр. ПЗПІ-22-9
Сотников Єгор травня 2025 р. Перевірив:
Дашенков Д. С.





Харків 2025
 
1 РОЗРОБКА ОПИСУ ПРОТОТИПУ ПРОЄКТУ В ФОРМАТІ
«VISION AND SCOPE»
1.	Історія змін

Зміни в документі нотуються до таблиці 1.1. Таблиця 1.1 – Історія змін

№	Дата	Версія звіту	Опис змін та виправлень
1	02.05.25	0.1	Створено розділ «Історія змін»
2	02.05.25	0.1	Створено розділ «Завдання»
3	02.05.25	0.1	Створено розділ «Опис виконаної роботи»
4	02.05.25	0.1	Створено розділ «Висновки»
5	03.05.25	0.1	Додано додаток А з посиланням на відеоролик
6	03.05.25	0.1	Додано додаток Б з документом Vision & Scope
7			



1.2	Завдання


Мета завдання – створити документ Vision & Scope для програмної системи моніторингу ваги та управління пристроями зважування. Цей документ має чітко окреслити бачення та межі проєкту, визначаючи його актуальність, цілі, ключові функціональні можливості, а також основні технічні та організаційні аспекти.
Документ повинен служити спільною точкою орієнтації для всіх зацікавлених сторін — замовників, розробників, тестувальників, аналітиків та потенційних користувачів системи моніторингу ваги. Він допоможе уникнути розбіжностей у трактуванні вимог щодо функціональності пристроїв зважування, веб-додатка, адміністративної панелі та API, встановити єдине розуміння завдань і забезпечити контроль обсягу робіт на всіх етапах розробки системи Weight Monitor.


1.3	Опис виконаної роботи


У процесі роботи було розроблено документ Vision & Scope, у якому чітко визначено бачення та межі проєкту програмної системи для моніторингу ваги та управління пристроями зважування. Документ охоплює всі ключові аспекти проєкту – від актуальності проблеми до технічних деталей реалізації.
У першому розділі описано соціальну та економічну значущість проблеми ефективного моніторингу ваги та управління даними зважування, зокрема в контексті промислового виробництва, логістики, торгівлі та домашнього використання. Розглянуто існуючі рішення на ринку систем зважування, проаналізовано їхні переваги та недоліки. Також запропоновано потенційні моделі монетизації.
У другому розділі описано основну мету створення системи – автоматизацію процесів моніторингу, обліку та аналізу даних зважування з підтримкою багатоканальних пристроїв.
У третьому розділі детально описано кожен із компонентів системи: 
–	Backend: реалізація REST API на Node.js з MongoDB, обробка даних з пристроїв зважування через MQTT протокол, управління користувачами та пристроями, забезпечення авторизації та автентифікації; 
–	Web-інтерфейс: зручна адмін-панель (React) для адміністраторів та інтерфейс для користувачів з можливістю перегляду показань ваги, налаштування пристроїв та аналізу історичних даних; 
–	Система пристроїв: IoT-пристрої з підтримкою до 4 незалежних весів, передача даних в реальному часі, налаштування граничних значень.
–	Мобільний додаток: доступ до ключових функцій для користувачів, реалізований на Kotlin для швидкого перегляду даних.
Визначено технічні вимоги до кожної частини, включаючи необхідні бібліотеки, протоколи передачі даних (MQTT), типи взаємодії з користувачем та інтеграцію з пристроями зважування.
У четвертому розділі розписано зацікавлені сторони. Описано попередній план-графік розробки проєкту та визначено основні технології для реалізації системи Weight Monitor.
Документ Vision & Scope наведено у додатку Б.




1.4	Висновки


Розроблений документ Vision & Scope створює чітке уявлення про проєкт моніторингу ваги та управління даними зважування, його цілі та обсяг. Він стане основою для подальшої технічної документації, планування розробки системи Weight Monitor та комунікації між усіма учасниками процесу.
 
Додаток А
Хронологічний опис та посилання


Відеозапис доповіді на YouTube: 


Хронологічний опис доповіді:

 
Додаток Б
Документ Vision and Scope

Vision and Scope Document
for
Програмна система для моніторингу ваги та управління даними зважування
Version 1.1 approved


Prepared by Сотников Є. Р.


ст. гр. ПЗПІ-22-9
 
ЗМІСТ



Зміст	9
Журнал версій	10
1	Бізнес вимоги	11
1.1	Передумови	11
1.2	Бізнес-можливість	12
2	Концепція рішення	14
2.1	Окреслення концепції	14
2.2	Головна функціональність	14
3	Рамки та обмеження проєкту	16
3.1	Рамки первинного випуску	16
3.2	Рамки наступних випусків	18
3.3	Обмеження та винятки	20
4	Бізнес-контекст	21
4.1	Профілі зацікавлених сторін	21
4.2	Пріоритети проєкту	21
4.3	Робоче середовище	22









9
 
ЖУРНАЛ ВЕРСІЙ




Name	Date	Reason For Changes	Version
WeightMonitor	03.05.25	Створення документу	1.0
			
































10
 
1	Бізнес Вимоги
1.1	Передумови

Система для моніторингу ваги та управління пристроями зважування — це програмний продукт, орієнтований на забезпечення точності, надійності та оптимізації процесів зважування в домогосподарствах, підприємствах чи промислових комплексах. Основна мета проєкту — автоматизація процесів моніторингу, аналізу та управління даними зважування з урахуванням технічних і нормативних вимог.
Клієнти та підприємства працюють із різними типами даних зважування, такими як показники весів, параметри навантаження та режими роботи обладнання зважування. Ці дані потребують точного обліку, аналізу та контролю для забезпечення ефективності процесів зважування. Зокрема, це моніторинг показників ваги, граничних значень, калібрування пристроїв, а також виявлення аномалій у вимірюваннях.
Система пропонує комплексний підхід до моніторингу ваги, який дозволяє документувати всі показники для звітності, забезпечити безперервний контроль важливих параметрів, таких як вага на кожному з весів, граничні значення та точність вимірювань, та звести до мінімуму ризики перевищення допустимих навантажень чи неточного зважування.
Розробка цієї системи спрямована на підвищення прозорості процесів зважування, зменшення витрат на обслуговування обладнання, забезпечення користувачам високого рівня контролю та ефективності. Система допоможе клієнтам відповідати нормативним вимогам, оптимізувати процеси зважування та мінімізувати ризики помилок чи перевантажень обладнання.

1.2	Бізнес-можливість

На ринку вже існують подібні системи, такі як SAP Warehouse Management, Mettler Toledo DataBridge, та Avery Weigh-Tronix.
–	SAP Warehouse Management (SAP ERP): – Переваги: потужна ERP-система з широкими можливостями інтеграції, підтримка фінансів і логістики, модулі управління складськими операціями. – Недоліки: висока вартість, складність налаштування, орієнтована не на моніторинг ваги, а на загальний менеджмент складу.
–	Mettler Toledo DataBridge (monitoring system): – Переваги: спеціалізація на роботі з ваговим обладнанням, підтримка звітності та калібрування. – Недоліки: вузька спеціалізація на обладнання одного виробника, обмежена інтеграція з IoT-рішеннями різних постачальників.
–	Avery Weigh-Tronix (IoT + Analytics): – Переваги: зручний інтерфейс для моніторингу вагового обладнання, інтеграція з деякими IoT-системами. – Недоліки: висока ціна, обмежена кастомізація, недостатня підтримка багатоканальних пристроїв, прив'язка до власного обладнання.
Переваги запропонованої системи: 
–	Комплексний підхід: об'єднання функцій моніторингу, аналізу та звітності вагових даних в одній платформі. 
–	Багатоканальність: підтримка до 4 незалежних весів на одному пристрої. 
–	Відкритість: незалежність від конкретного виробника вагового обладнання. 
–	Гнучкість: можливість налаштування під потреби окремих користувачів чи підприємств.
Система пропонує декілька варіантів монетизації: 
–	Підписка (SaaS) — щомісячна або річна плата за використання з підтримкою певної кількості пристроїв. 
–	Оплата за модулі — базова версія + розширені платні модулі (аналітика, IoT-інтеграція, API). 
–	Плата за інтеграції з обладнанням (IoT) та додаткові пристрої зважування. 
–	Підтримка/супровід — платна техпідтримка, калібрування або налаштування пристроїв. 
–	Приватна версія під великі підприємства чи промислові комплекси.
Зростаюча потреба в автоматизації процесів зважування та посилення вимог до точності обліку створюють великий попит на подібні рішення. Проєкт має високий потенціал стати лідером у своїй ніші завдяки поєднанню зручності, багатофункціональності та відкритості архітектури.
 
2	Концепція Рішення
2.1	Окреслення концепції

Система для моніторингу ваги та управління пристроями зважування — це інноваційний програмний продукт, розроблений для забезпечення прозорого та ефективного управління процесами зважування. Його головне призначення — автоматизація моніторингу, аналізу вагових даних, звітності, а також забезпечення відповідності метрологічним та нормативним вимогам.
Ця система стане надійним інструментом для: – Підвищення точності та надійності процесів зважування; – Оптимізації роботи вагових систем та обладнання; – Скорочення витрат на обслуговування та мінімізації помилок зважування; – Забезпечення звітності для контролюючих органів чи внутрішнього аудиту якості.
Система орієнтована на домогосподарства, підприємства та промислові комплекси, де важливо забезпечити точний контроль і оптимізацію процесів зважування з підтримкою багатоканальних пристроїв та централізованого управління ваговими даними.

2.2	Головна функціональність

Система для моніторингу ваги та управління пристроями зважування — це інноваційний програмний продукт, розроблений для забезпечення прозорого та ефективного управління процесами зважування. Його головне призначення — автоматизація моніторингу, аналізу вагових даних, звітності та забезпечення відповідності метрологічним вимогам.
Ця система стане надійним інструментом для:
–	Підвищення точності та надійності зважування;
–	Оптимізації роботи вагових систем;
–	Скорочення витрат на обслуговування та мінімізації помилок;
–	Забезпечення звітності для контролюючих органів чи внутрішнього контролю якості.
Система орієнтована на домогосподарства, підприємства та промислові комплекси, де важливо забезпечити точний контроль і оптимізацію процесів зважування з підтримкою багатоканальних пристроїв.
Функціональні можливості системи:
–	Автоматизований облік вагових даних (MF-1) – забезпечує реєстрацію всіх даних про зважування з фіксацією джерел, часу вимірювання та історії навантаження на кожному з весів.
–	Моніторинг умов роботи (MF-2) – здійснює контроль параметрів, таких як показники ваги, граничні значення та статус пристроїв зважування.
–	Генерація звітності (MF-3) – автоматично формує звіти для внутрішнього аналізу або подання контролюючим органам, з урахуванням метрологічних вимог.
–	Трасування процесів (MF-4) – фіксує всі етапи роботи з ваговими даними, включаючи їх збір, обробку, зберігання та аналіз, для забезпечення прозорості та аудиту.
–	Інтеграція з обладнанням (MF-5) – дозволяє синхронізувати систему з пристроями зважування (ваги, датчики навантаження) для автоматичного збору даних через MQTT протокол.
–	Управління доступом (MF-6) – реалізує систему розподілу прав доступу, обмежуючи доступ до вагових даних лише авторизованим користувачам та адміністраторам.
–	Інтеграція з зовнішніми системами (MF-7) – забезпечує обмін даними з іншими інформаційними системами (WMS, ERP чи логістичними платформами), створюючи єдине інформаційне середовище для управління ваговими операціями.
 
3	Рамки Та Обмеження Проєкту
3.1	Рамки первинного випуску

Перший випуск системи включатиме базові можливості для забезпечення основних потреб користувачів:
–	реалізація автоматизованого обліку вагових даних (MF-1);
–	генерація стандартної звітності (MF-3);
–	модуль управління доступом до вагових даних (MF-6);
–	інтеграція з базовим обладнанням для збору даних через IoT-пристрої зважування (MF-5).
Передбачено базові інструменти адміністрування для створення користувачів, налаштування прав доступу та управління системними параметрами. У першому релізі реалізовано сервер з базовими алгоритмами для контролю, обліку та аналізу інформації, що дозволяє ефективно моніторити процеси зважування на підприємствах та в домогосподарствах.
Система буде доступною для використання:
–	на персональних комп'ютерах через веб-інтерфейс;
–	на сервері для централізованого моніторингу;
–	на мобільних пристроях.
Програмне забезпечення серверної частини системи:
Функції серверної частини:
–	REST API для веб-інтерфейсу та мобільного клієнта;
–	обробка даних від IoT-пристроїв зважування (ваги, датчики навантаження);
–	генерація звітів та логування вагових показників;
–	авторизація та автентифікація;
–	робота з базою даних (MongoDB);
–	валідація даних, контроль відповідності метрологічним вимогам.
Вимоги до серверної частини:
–	мова: Node.js;
–	база даних: MongoDB;
–	архітектура: REST;
–	масштабованість, модульність.
Веб-застосунок:
Веб-інтерфейс використовується для адміністрування та користувацького доступу.
Функції:
–	управління користувачами та ролями (для адмінки);
–	створення, редагування, видалення облікових записів (для адмінки);
–	призначення ролей (для адмінки);
–	налаштування прав доступу (для адмінки);
–	перегляд даних про показники ваги та пристрої зважування (для всіх користувачів);
–	доступ до логування подій зважування.
Вимоги:
–	розробка на React (з використанням сучасних компонентів);
–	доступ через браузер;
–	безпечна автентифікація;
–	зручний інтерфейс для моніторингу показників ваги з багатоканальних пристроїв;
–	збереження даних у MongoDB.
Мобільний застосунок:
Функції:
–	доступ до ключових даних про показники ваги для користувачів;
–	перегляд звітів та основних показників зважування.
Вимоги:
–	розробка на Kotlin;
–	безпечна автентифікація;
–	зручний інтерфейс для швидкого перегляду вагових даних.
Програмне забезпечення пристрою IoT:
Взаємодія з IoT-пристроями зважування, такими як датчики навантаження та ваги, встановлені на виробничому обладнанні, складських системах та домашніх пристроях. Реалізовано автоматичний збір, обробку та відображення вагових даних у реальному часі.
Функції:
–	Збір та передача даних з пристроїв зважування (показники ваги з 4 незалежних весів);
–	Надсилання даних на сервер у реальному часі через MQTT;
–	Аналіз поточних показників порівняно з граничними значеннями;
–	Збереження історії змін вагових показників для трасування процесів.
Вимоги:
–	Підключення до мережі Wi-Fi або мобільного інтернету;
–	Пристрої зважування з підтримкою MQTT протоколу;
–	Налаштування інтервалів зчитування показників ваги.
Система складається з трьох основних компонентів: мобільного застосунку, веб-застосунку та серверної частини. Всі компоненти взаємодіють через REST API. Також підключено IoT-пристрої для моніторингу показників ваги у реальному часі

3.2	Рамки наступних випусків

Після запуску первинної версії планується розширення системи шляхом впровадження додаткових можливостей:
–	Інтеграція з іншими системами управління (MF-7);
–	Розширена функціональність звітності з редагуванням форм звітів;
–	Розробка модуля для прогнозування вагових навантажень та автоматичного планування режимів роботи пристроїв зважування;
–	Підтримка інтеграції з розширеним обладнанням, зокрема для моніторингу великих промислових вагових систем;
–	Інтернаціоналізація програмної системи;
–	Впровадження монетизації;
–	Впровадження машинного навчання для аналізу вагових даних.
Планується розширення функціональності для оптимізації роботи на хмарних платформах з підтримкою автономного режиму для мобільних пристроїв. Ці зміни спрямовані на подальший розвиток системи, покращення її інтеграції та відповідності новим вимогам ринку вагових технологій.
Для майбутніх релізів передбачається використання штучного інтелекту (ШІ) для підвищення ефективності системи:
Прогнозування вагових навантажень – модель ШІ аналізуватиме історичні дані зважування та зовнішні фактори (виробничі цикли, час доби) для передбачення пікових навантажень на пристрої.
Оптимізація режимів роботи – на основі аналізу даних ШІ визначатиме оптимальні режими роботи вагового обладнання, мінімізуючи зношування та перевантаження пристроїв.
Аналіз поведінки користувачів – система може використовувати ШІ для виявлення аномального використання вагового обладнання або прогнозування потреб на основі попередніх даних зважування.
Інтелектуальний пошук і класифікація – застосування обробки природної мови (NLP) для швидкого пошуку інформації та автоматичної категоризації вагових даних.
Оптимізація розподілу навантаження – аналіз даних для прогнозування оптимального розподілу навантаження між багатьма весами в системі.
Для ефективного навчання моделей необхідно збирати та обробляти такі дані:
–	Дані про показники зважування (вага, час, місце вимірювання, користувач);
–	Історичні дані зважування (періодичність, обсяги, сезонні коливання);
–	Технічні дані (параметри роботи вагового обладнання, час простою, режими калібрування);
–	Фізичні параметри (показники ваги з кожного датчика, граничні значення, точність вимірювань);
–	Лог-файли активності користувачів (взаємодія з системою, запити, налаштування пристроїв).
Дані можуть збиратися через серверну частину з подальшою обробкою у спеціальних модулях аналітики вагових показників.
Для інтеграції ШІ можливе використання готових API-сервісів (наприклад, Google AI, OpenAI, AWS AI), що дозволяє швидко впровадити базову аналітику без необхідності розробки власної моделі для обробки вагових даних..


3.3	Обмеження та винятки

Наведемо обмеження та виключені можливості, які могли б бути присутні в системі, але навмисно виключені з міркувань продуктивності, безпеки або спрощення користувацького досвіду.
–	Конфіденційність даних – при збиранні та обробці вагових даних повинні дотримуватися міжнародні стандарти безпеки (наприклад, GDPR), що може обмежити використання певних методів ШІ для аналізу показників зважування.
–	Вимоги до продуктивності – складні моделі ШІ потребують значних обчислювальних ресурсів, що може обмежити їх використання у мобільному застосунку без хмарної інтеграції для обробки вагових даних.
–	Точність прогнозування – ШІ не може гарантувати 100% точність прогнозів вагових навантажень, тому рішення про зміну режимів роботи пристроїв зважування має залишатися під контролем людини.
–	Виключення складних сценаріїв управління – система навмисно не включає складні механізми управління ваговими мережами, такі як багаторівневі системи розподілу навантаження між пристроями зважування, щоб зосередитися на простоті та ефективності основного функціоналу моніторингу ваги.
–	Обмежене використання автономного режиму – через необхідність синхронізації вагових даних із сервером автономний режим матиме обмежену функціональність, зокрема, не дозволятиме критичні операції з ваговими пристроями без підтвердження від центральної системи.
–	Відсутність підтримки кастомних алгоритмів ШІ для користувачів – користувачі не зможуть самостійно навчати моделі або змінювати алгоритми прогнозування вагових показників, оскільки це потребувало б значного залучення ресурсів та контролю якості аналізу даних зважування.
–	Обмеження на кількість одночасно підключених пристроїв – для забезпечення стабільної роботи система матиме ліміт на кількість одночасно активних пристроїв зважування в межах однієї мережі.
–	Відсутність підтримки застарілого вагового обладнання – система не підтримуватиме інтеграцію з аналоговими або застарілими пристроями зважування, що не мають можливості передачі даних через цифрові протоколи.
.
 
4	Бізнес-Контекст
4.1	Профілі зацікавлених сторін

У проєкті беруть участь наступні зацікавлені сторони:
–	Користувачі (домогосподарства, підприємства);
–	Технічний персонал: обслуговування IoT-пристроїв;
–	Адміністратори: приймають рішення про впровадження;
–	Регулюючі органи: отримувачі звітів;
–	Інвестори: джерело фінансування;
–	Розробники/технічна команда: реалізація і підтримка.


4.2	Пріоритети проєкту

Опишемо строки виконання у таблиці 4.1.


Таблиця 4.1 – Календарний план

Етап	Тривалість	Дії
1. Аналіз вимог та дизайн	1 тижні	Збір вимог, проектування БД,
створення мокапів
2. Розробка бекенду (MVP)	3 тижні	Створення REST API -
базовий облік
3. IoT-модуль (прототип)	2 тижні	Створення IOT
4. Веб-клієнт	4 тижні	Повний веб- клієнт з адмiн сторiнкою
5. Мобільний застосунок	3 тижні	Створення базового мобайлу для IOS та Android
6. Тестування та
документування	2 тижні	Тестування та підготовка
документації
7. Розгортання і презентація	1 тиждень	Демо
 
4.3.	Робоче середовище

Програмні технології, які будуть використані у серверній частині програмної системи, включають Node.js як основну мову розробки та фреймворк Express для побудови REST API. Для автентифікації та авторизації користувачів буде використано middleware, сумісне з JSON Web Tokens (JWT), а для доступу до бази даних MongoDB — драйвер Mongoose, що використовується для зберігання інформації про користувачів, вагові дані та параметри роботи пристроїв зважування.
Програмні технології, які будуть використані у програмному забезпеченні пристроїв інтернету речей, передбачають використання протоколу MQTT для обміну повідомленнями між IoT-пристроями зважування (зокрема вагами, датчиками навантаження) та сервером, а також спеціалізованих бібліотек, сумісних з цим протоколом. Пристрої будуть налаштовані на передачу вагових даних у реальному часі до центрального серверу для моніторингу показників зважування.
Програмні технології, які будуть використані у веб-клієнтській частині програмної системи, базуються на мові програмування JavaScript з використанням фреймворка React для розробки адаптивного та інтерактивного користувацького інтерфейсу для взаємодії з системою через браузер.
Захист даних у програмній системі буде забезпечено за допомогою шифрування інформації, що зберігається у базі даних, із застосуванням стандарту AES-256. Крім того, для безпечного доступу користувачів реалізовано автентифікацію та авторизацію через JWT із підтримкою ролей та прав доступу.
Адміністрування програмної системи здійснюватиметься через окрему адміністративну панель (React-based), доступ до якої матимуть лише користувачі з відповідними правами. Через цю панель адміністратор зможе керувати користувачами, моніторити роботу системи, перевіряти логування подій зважування і керувати системними налаштуваннями.
Резервне копіювання даних і налаштувань програмної системи виконуватиметься автоматично щодня за допомогою скриптів, що створюють резервні копії бази даних MongoDB та конфігураційних файлів сервера.
Налаштування пристрою інтернету речей здійснюватиметься через інтерфейс конфігурації, який дозволить підключити новий пристрій зважування до системи, задати порогові значення для датчиків ваги та перевірити з'єднання з сервером через MQTT-брокер.
Мовами, якими буде локалізована програмна система в наступних випусках, є українська та англійська. Українська мова використовується як основна, тоді як англійська забезпечує доступ для потенційних міжнародних користувачів та персоналу, що не володіє українською.
Інтернаціоналізація програмної системи забезпечується за допомогою зовнішніх ресурсних файлів, які містять текстові повідомлення різними мовами. У веб-клієнті буде реалізовано механізм вибору мови, який надасть можливість користувачеві змінити мову вручну.

